from controller import Robot, Motor

# Constants
TIME_STEP = 32  # Webots simulation time step in milliseconds
JOINT_NAMES = ["base", "upperarm", "forearm", "wrist", "rotational_wrist", "gripper::right"]

class IprHd6m90Controller:
    def __init__(self):
        self.robot = Robot()
        self.joints = {}

        # Kh·ªüi t·∫°o c√°c kh·ªõp c·ªßa robot
        for joint in JOINT_NAMES:
            self.joints[joint] = self.robot.getDevice(joint)
            if self.joints[joint] is None:
                print(f"‚ö†Ô∏è Warning: {joint} not found!")
            else:
                self.joints[joint].setPosition(0.0)  # ƒê·∫∑t v·ªã tr√≠ ban ƒë·∫ßu

    def move_joint(self, joint_name, position):
        """Di chuy·ªÉn kh·ªõp c·ª• th·ªÉ ƒë·∫øn v·ªã tr√≠ trong gi·ªõi h·∫°n an to√†n."""
        if joint_name in self.joints and self.joints[joint_name] is not None:
            min_pos = self.joints[joint_name].getMinPosition()
            max_pos = self.joints[joint_name].getMaxPosition()
            
            position = max(min(position, max_pos), min_pos)

            if min_pos != float("-inf") and max_pos != float("inf"):
                if not (min_pos <= position <= max_pos):
                    print(f"üö´ Invalid position for {joint_name}: {position} (Allowed: {min_pos} to {max_pos})")
                    return
            
            self.joints[joint_name].setPosition(position)
        else:
            print(f"‚ùå Error: {joint_name} not found!")

    def pick_up_stamp(self):
        """Di chuy·ªÉn ƒë·∫øn v·ªã tr√≠ stamp v√† nh·∫∑t n√≥ l√™n."""

        print("‚úÖ Moving to stamp position...")
        self.move_joint("base", 3)  # Xoay v·ªÅ ph√≠a stamp
        self.move_joint("upperarm", -1.1)  # H·∫° tay xu·ªëng g·∫ßn stamp
        self.move_joint("forearm", 0)  # ƒêi·ªÅu ch·ªânh forearm
        self.move_joint("wrist", -1)  # CƒÉn ch·ªânh c·ªï tay
        self.move_joint("gripper::right", 0.7)
        self.move_joint("rotational_wrist", 0)  # Xoay c·ªï tay nh·∫∑t stamp

        self.robot.step(2000)  # Ch·ªù robot di chuy·ªÉn

        # ƒê√≥ng k·∫πp ƒë·ªÉ c·∫ßm stamp
        print("‚úÖ Grabbing the stamp...")
        self.move_joint("upperarm", -1.5)
        self.move_joint("gripper::right", -0.04)  # ƒê√≥ng gripper gi·ªØ stamp

        self.robot.step(1500)  # Ch·ªù k·∫πp gi·ªØ ch·∫Øc

        # N√¢ng stamp l√™n
        print("‚úÖ Lifting stamp...")
        self.move_joint("upperarm", 0.0)  # N√¢ng tay l√™n
        self.robot.step(1000)
        
        return True  # X√°c nh·∫≠n ƒë√£ c·∫ßm ƒë∆∞·ª£c stamp

    def press_stamp(self):
        """Di chuy·ªÉn ƒë·∫øn gi·∫•y v√† ƒë√≥ng d·∫•u."""
        print("‚úÖ Moving to paper position...")
        self.move_joint("base", 6.0)  # Xoay v·ªÅ gi·∫•y
        self.move_joint("upperarm", -1)  # H·∫° tay xu·ªëng g·∫ßn gi·∫•y
        self.move_joint("forearm", 0.3)  # ƒêi·ªÅu ch·ªânh forearm
        self.move_joint("wrist", -0.8)  # CƒÉn ch·ªânh c·ªï tay

        self.robot.step(1500)  # Ch·ªù robot di chuy·ªÉn

        # Nh·∫•n xu·ªëng gi·∫•y
        print("‚úÖ Pressing stamp...")
        self.move_joint("upperarm", -1.6)
        self.move_joint("wrist", -1.4)  # √âp xu·ªëng
        self.robot.step(1500)

        # N√¢ng stamp l√™n 
        print("‚úÖ Lifting stamp...")
        self.move_joint("upperarm", 0.0)  # N√¢ng tay l√™n
        self.robot.step(1000)
        
    def releasing_stamp(self):
        # Nh·∫£ stamp
        print("‚úÖ Releasing stamp...")
        self.move_joint("base", 3)  # Xoay v·ªÅ ph√≠a stamp
        self.move_joint("upperarm", -1.0)  # H·∫° tay xu·ªëng g·∫ßn stamp
        self.move_joint("forearm", 0)  # ƒêi·ªÅu ch·ªânh forearm
        self.move_joint("wrist", -1)  # CƒÉn ch·ªânh c·ªï tay
        self.move_joint("gripper::right", -0.04)
        self.move_joint("rotational_wrist", 0) 

        self.robot.step(1500)  # Ch·ªù m·ªü k·∫πp
        
        self.move_joint("upperarm", -1.5)
        self.move_joint("gripper::right", 0.7)

        # N√¢ng tay l√™n
        print("‚úÖ Lifting arm...")
        self.move_joint("wrist", -0.8)
        self.move_joint("upperarm", 0.0)
        self.robot.step(1000)

    def reset_position(self):
        """Di chuy·ªÉn robot v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu."""
        print("üîÑ Resetting arm to initial position...")
        self.move_joint("base", 0.0)
        self.move_joint("upperarm", 0.0)
        self.move_joint("forearm", 0.0)
        self.move_joint("wrist", 0.0)
        self.move_joint("rotational_wrist", 0.0)
        self.move_joint("gripper::right", 0.1)  # ƒê·ªÉ gripper m·ªü s·∫µn
        self.robot.step(1000)

    def run(self):
        """Ch·∫°y qu√° tr√¨nh nh·∫∑t stamp v√† ƒë√≥ng d·∫•u."""
        while self.robot.step(TIME_STEP) != -1:
            if self.pick_up_stamp():  # B∆∞·ªõc 1: Nh·∫∑t stamp
                self.press_stamp()  # B∆∞·ªõc 2: ƒê√≥ng d·∫•u
                self.releasing_stamp()
                self.reset_position()  # B∆∞·ªõc 3: Quay v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu
            break  # D·ª´ng sau khi ho√†n th√†nh 1 l·∫ßn ƒë√≥ng d·∫•u

if __name__ == "__main__":
    controller = IprHd6m90Controller()
    controller.run()
